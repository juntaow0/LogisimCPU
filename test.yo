0x000:                      | .pos 0
0x000: 30f40002000000000000 |     irmovq Stack, %rsp      # set stack top to 0x200
0x00a: 30f34000000000000000 |     irmovq $0x40, %rbx      
0x014: 2035                 |     rrmovq %rbx, %rbp	    # put 0x40 in %rbx and %rbp
0x016: 806000000000000000   |     call main
0x01f: 10                   |     nop
0x020: 10                   |     nop
0x021: 10                   |     nop
0x022: 30f41000000000000000 |     irmovq $0x10, %rsp
0x02c: 40040000000000000000 |     rmmovq %rax, (%rsp)	    # store result at M[%rsp]
0x036: 00                   |     halt
                            | 
0x038:                      | .align 8
0x038:                      | array:
0x038: 0400000000000000     |     .quad 0x4
0x040: 0700000000000000     |     .quad 0x7
0x048: 0200000000000000     |     .quad 0x2
0x050: 0a00000000000000     |     .quad 0xa
0x058: 0000000000000000     |     .quad 0x0               # allocate an array
                            | 
0x060:                      | main:
0x060: a03f                 |     pushq %rbx
0x062: a05f                 |     pushq %rbp              # callee saved
0x064: 30f00000000000000000 |     irmovq $0x0, %rax       # result = 0
0x06e: 30f50100000000000000 |     irmovq $0x1, %rbp       # set i = 1
0x078: 30f73800000000000000 |     irmovq array, %rdi      # get array top address
0x082: 30f61000000000000000 |     irmovq $0x10, %rsi
0x08c: 40672000000000000000 |     rmmovq %rsi, 0x20(%rdi) # add 0x10 to array 
0x096: 80a400000000000000   |     call findmax            # find max number in the array
0x09f: b05f                 |     popq %rbp
0x0a1: b03f                 |     popq %rbx
0x0a3: 90                   |     ret
                            | 
0x0a4:                      | findmax:
0x0a4: 50370000000000000000 |     mrmovq (%rdi),%rbx      # get array top value
0x0ae: 6130                 |     subq   %rbx,%rax        # if result < array[i]
0x0b0: 2230                 |     cmovl  %rbx,%rax        # result = array[i]
0x0b2: 30fa0400000000000000 |     irmovq $0x4, %r10
0x0bc: 615a                 |     subq   %rbp, %r10
0x0be: 75c800000000000000   |     jge    Loop             # if i < 5, go to loop
0x0c7: 90                   |     ret                     # return result
                            | 
0x0c8:                      | Loop:
0x0c8: 30fc0100000000000000 |     irmovq $0x1, %r12
0x0d2: 60c5                 |     addq   %r12, %rbp       # i++
0x0d4: 30fb0800000000000000 |     irmovq $0x8, %r11
0x0de: 60b7                 |     addq   %r11,%rdi        # update array top address
0x0e0: 70a400000000000000   |     jmp    findmax
                            | 
0x200:                      | .pos 0x200
0x200:                      | Stack:
